# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Customize to your needs...

# Source env specific profile stuff
if [[ -s "${ZDOTDIR:-$HOME}/.profile" ]]; then
  source "${ZDOTDIR:-$HOME}/.profile"
fi

# Source zsh command completions
if [[ -s "/usr/local/share/zsh/site-functions/aws_zsh_completer.sh" ]]; then
  source /usr/local/share/zsh/site-functions/aws_zsh_completer.sh
fi

# zsh auto suggestions
# Widgets that accept the entire suggestion
ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=(
        end-of-line
        vi-forward-char
        vi-end-of-line
        vi-add-eol
)

# Widgets that accept the suggestion as far as the cursor moves
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS=(
        forward-word
        forward-char
        vi-forward-word
        vi-forward-word-end
        vi-forward-blank-word
        vi-forward-blank-word-end
)

# Key bindings
bindkey "^[[5~" history-beginning-search-backward # Page Up
bindkey "^[[6~" history-beginning-search-forward  # Page Down


bindkey '^f' vi-forward-word
bindkey '^b' vi-backward-word
bindkey '^x' fzf-cd-widget
bindkey '^z' fancy-ctrl-z

# Aliases
alias __='_ -s'
alias 7=7z

alias bat='bat --style numbers,changes,snip'
alias b=brew
alias bi='brew info'
alias bin='brew install'
alias bs='brew search'
alias br='brew remove'
alias c=cd
alias df='df -H'
alias du='setopt CSH_NULL_GLOB && du -sch .[!.]* * |sort -h && unsetopt CSH_NULL_GLOB'

alias f='fd'
alias fzf='fzf --preview "head -100 {}"'

alias g=git
alias ga='git add'
alias gb='git branch'
alias gc='git commit'
alias gco='git checkout'
alias gd='git difftool'
alias gdg='git difftool -g'
alias gf='git fetch'
alias gl='git log'
alias gm='git merge'
alias gp='git pull'
alias gpu='git push'
alias gr='git remote'
alias gs='git status'
alias gsp='git stash pop'
alias gst='git stash'
alias gsm='git submodule'

alias gg='googler --colors Bjdgxy'
alias iiff='idea diff'

if [[ -s /usr/local/bin/gls ]]; then
  alias l='/usr/local/bin/gls -lAh --group-directories-first --color'
else
  alias l='/bin/ls -lAh --group-directories-first --color'
fi

alias p='cd ~/Projekte/iOS/H-Hotels'

[ -s /usr/bin/pbcopy ] && alias cpy='/usr/bin/pbcopy'
[ -s /usr/bin/pbpaste ] && alias pst='/usr/bin/pbpaste'

alias piff='pstorm diff'
alias pip=pip3
alias python=python3
alias rg='rg -i'
alias rr='rm -rf'
alias sl=subl
[ -s /usr/local/bin/gsort ] && alias sort=gsort

# Functions
function ds {
	open "dash://b:$*"
}

function bu {
    brew upgrade
    echo 'üçª  \e[1mBrew update finished üçª Upgrading Casks:\e[0m'
    brew cask upgrade
}

function fancy-ctrl-z {
  if [[ $#BUFFER -eq 0 ]]; then
    bg
    zle redisplay
  else
    zle push-input
  fi
}
zle -N fancy-ctrl-z

function ff {
	sudo fd $* /
}

function jira_stem {
     jira login && jira worklog add --noedit $1 $2 $3
}

function jira_timestamp {
    [ $3 ] && echo "-S$3-$2-$1T00:00:00.000-0000" && return
    [ $2 ] && echo "-S$(date +%Y-)$2-$1T00:00:00.000-0000" && return
    [ $1 ] && echo "-S$(date +%Y-%m-)$1T00:00:00.000-0000"
}

function t {
    jira_stem $1 -T0$2h $(jira_timestamp $3 $4 $5)
}

function th {
    jira_stem HHOTELS-$1 -T0$2h $(jira_timestamp $3 $4 $5)
}

function thm {
    jira_stem HHOTELS-2 -T0$1h $(jira_timestamp $2 $3 $4)
}

function thr {
    jira_stem HHOTELS-13 -T0$1h $(jira_timestamp $2 $3 $4)
}

function ti {
    jira_stem INT-33 -T0$1h $(jira_timestamp $2 $3 $4)
}

function tm {
    jira_stem INT-5 -T0$1h $(jira_timestamp $2 $3 $4)
}

function tmd {
    jira_stem INT-4 -T0$1h $(jira_timestamp $2 $3 $4)
}

function trr {
    jira_stem INT-2 -T0$1h $(jira_timestamp $2 $3 $4)
}

function x {
    print "\e[1mcount: $(ls -1 $1 | wc -l )\e[0m" && exa -lah --group-directories-first --git $1
}

# Additonal external scripts and auto completions
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

eval "$(jira --completion-script-zsh)"

eval "`pip completion --zsh`"
compctl -K _pip_completion pip3

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
